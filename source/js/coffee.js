// Generated by CoffeeScript 1.3.2
(function() {
  var Animal, Dog, arr, data, dog, fibo, hello, html, i, name, pos, size, sourc, source, val, value, _i, _j, _len, _len1,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  arr = ["a", "b", "c", "d", "e"];

  for (_i = 0, _len = arr.length; _i < _len; _i++) {
    val = arr[_i];
    console.log(val);
  }

  source = function(x) {
    return x * x;
  };

  sourc = function(y) {
    return x * x;
  };

  Animal = (function() {

    function Animal(name) {
      this.name = name;
    }

    Animal.prototype.say = function(word) {
      return console.log("" + this.name + " said: " + word);
    };

    return Animal;

  })();

  Dog = (function(_super) {

    __extends(Dog, _super);

    function Dog(name) {
      Dog.__super__.constructor.call(this, name);
    }

    Dog.prototype.say = function(word) {
      return Dog.__super__.say.call(this, "Bowwow, " + word);
    };

    return Dog;

  })(Animal);

  dog = new Dog("Bob");

  dog.say("Hello!");

  name = "Nao";

  console.log("My name is " + name + "!");

  Dog = (function() {

    function Dog() {}

    Dog.TYPE_CHIHUAHUA = 1;

    return Dog;

  })();

  html = '<html>\n  <head>\n    <title>CoffeeScript</title>\n  </head>\n  <body>\n    <table>\n      <tr>\n        <td></td>\n      </tr>\n    </table>\n  </body>\n</html>';

  if (typeof myName !== "undefined" && myName !== null) {
    console.log("Yes");
  } else {
    console.log("No");
  }

  myFunc({
    width: 100,
    height: 100
  });

  setTimeout(function() {
    return console.log("ok");
  }, 1000);

  data = {
    x: 200,
    y: 200
  };

  for (name in data) {
    value = data[name];
    console.log("" + name + ": " + value);
  }

  arr = ["a", "b", "c", "d", "e"];

  for (i = _j = 0, _len1 = arr.length; _j < _len1; i = ++_j) {
    val = arr[i];
    console.log("" + i + ": " + val);
  }

  pos = {
    x: 100,
    y: 200,
    dump: function() {
      var func,
        _this = this;
      func = function() {
        return console.log("x:" + _this.x + ", y:" + _this.y);
      };
      return func();
    }
  };

  if (typeof console !== "undefined" && console !== null) {
    if (typeof console.log === "function") {
      console.log("Hello World");
    }
  }

  pos = {
    x: 100,
    y: 200,
    dump: function() {
      return console.log("x:" + this.x + ", y:" + this.y);
    }
  };

  hello = function() {
    return console.log("Hello World!");
  };

  hello();

  fibo = function(n) {
    if (n < 2) {
      return n;
    } else {
      return fibo(n - 1) + fibo(n - 2);
    }
  };

  size = {
    width: 100,
    height: 100
  };

}).call(this);
